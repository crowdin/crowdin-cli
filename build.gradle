plugins {
    id 'java'
}

plugins {
    id 'jacoco'
}

group 'com.crowdin'
version '3.0.4'

sourceCompatibility = 1.8

if (!hasProperty('mainClass')) {
    ext.mainClass = 'com.crowdin.cli.Cli'
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
    maven {
        url "http://repo1.maven.org/maven2"
    }
}

dependencies {
    compile group: 'org.json', name: 'json', version: '20160212'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.3.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.5'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.5'
    compile group: 'org.yaml', name: 'snakeyaml', version: '1.17'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'

    compile group: 'org.glassfish.jersey.core', name: 'jersey-client', version: '2.28'
    compile group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: '2.28'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: '2.28'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'net.lingala.zip4j', name: 'zip4j', version: '1.3.2'
    compile group: 'net.ricecode', name: 'string-similarity', version: '1.0.0'
    compile group: 'com.github.fge', name: 'json-patch', version: '1.9'


    compile files('libs/crowdin-1.0.jar')
    testCompile('org.junit.jupiter:junit-jupiter:5.5.2')
}

task buildCrowdinCliJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Crowdin CLI',
                'Implementation-Version': version,
                'Main-Class': 'com.crowdin.cli.Cli'
    }
    baseName = 'crowdin-cli'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/reports")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        xml.destination file("${buildDir}/coverage.xml")
    }

    getExecutionData().setFrom("$buildDir/jacoco/test.exec")
}
